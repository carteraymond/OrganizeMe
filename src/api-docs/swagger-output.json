{
  "swagger": "2.0",
  "info": {
    "title": "OrganizeMe API",
    "version": "1.0.0",
    "description": "API documentation for the OrganizeMe project"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/": {
      "post": {
        "tags": [
          "category"
        ],
        "summary": "Create a new category",
        "description": "Create a new category for a user.",
        "responses": {
          "201": {
            "description": "category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Category"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Category"
              }
            }
          }
        }
      },
      "get": {
        "tags": [
          "Category"
        ],
        "summary": "Get all category",
        "description": "Retrieve all categories for the user.",
        "responses": {
          "200": {
            "description": "category retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Category"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": [
          "User"
        ],
        "summary": "Get a user by ID",
        "description": "Fetch a user by their ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "schema": {
              "type": "string"
            },
            "description": "ID of the user"
          }
        ],
        "responses": {
          "200": {
            "description": "User found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "firstName": {
                  "example": "any"
                },
                "lastName": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Category"
        ],
        "summary": "Delete a category",
        "description": "Delete a category by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "schema": {
              "type": "string"
            },
            "description": "ID of the category to delete"
          }
        ],
        "responses": {
          "200": {
            "description": "category deleted successfully"
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "category not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/task": {
      "post": {
        "description": "",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "title": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "dueDate": {
                  "example": "any"
                },
                "status": {
                  "example": "any"
                },
                "priority": {
                  "example": "any"
                },
                "userId": {
                  "example": "any"
                },
                "tags": {
                  "example": "any"
                },
                "categoryId": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "get": {
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/task/{id}": {
      "get": {
        "summary": "Get a task by ID",
        "description": "Fetch a task by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "schema": {
              "type": "string"
            },
            "description": "ID of the task"
          }
        ],
        "responses": {
          "200": {
            "description": "Task found",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "put": {
        "summary": "Update a task",
        "description": "Update an existing task by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "schema": {
              "type": "string"
            },
            "description": "ID of the task"
          }
        ],
        "responses": {
          "200": {
            "description": "Task updated successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Task"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "404": {
            "description": "Task not found"
          }
        },
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Task"
              }
            }
          }
        }
      },
      "delete": {
        "summary": "Delete a task",
        "description": "Delete a task by its ID.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string",
            "schema": {
              "type": "string"
            },
            "description": "ID of the task"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/log": {
      "get": {
        "tags": [
          "Logs"
        ],
        "summary": "Get all logs",
        "description": "Retrieve all logs.",
        "responses": {
          "200": {
            "description": "Logs retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Log"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "githubId": {
            "type": "string",
            "description": "The unique GitHub ID of the user"
          },
          "username": {
            "type": "string",
            "description": "The username of the user"
          },
          "profileImgUrl": {
            "type": "string",
            "description": "URL to the user's profile image"
          },
          "displayName": {
            "type": "string",
            "description": "The display name of the user"
          },
          "canvasToken": {
            "type": "string",
            "description": "Token used for authentication with Canvas"
          }
        },
        "required": [
          "githubId",
          "username",
          "displayName"
        ]
      },
      "Task": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier for the task"
          },
          "title": {
            "type": "string",
            "description": "The title of the task"
          },
          "description": {
            "type": "string",
            "description": "Details about the task"
          },
          "dueDate": {
            "type": "string",
            "format": "date",
            "description": "The due date of the task"
          },
          "status": {
            "type": "string",
            "description": "The current status of the task",
            "enum": [
              "pending",
              "in-progress",
              "completed"
            ],
            "default": "pending"
          },
          "priority": {
            "type": "string",
            "description": "The priority level of the task",
            "enum": [
              "low",
              "medium",
              "high"
            ],
            "default": "medium"
          },
          "userId": {
            "type": "string",
            "description": "The identifier of the user who owns the task."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string",
              "description": "Unique identifier for the category associated with the taks"
            }
          },
          "categoryId": {
            "type": "string",
            "description": "Identifier for category this task belongs to"
          }
        },
        "required": [
          "title",
          "description",
          "dueDate",
          "priority"
        ]
      },
      "Category": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier for the category"
          },
          "name": {
            "type": "string",
            "description": "The name of the category"
          },
          "colorHex": {
            "type": "string",
            "description": "The hex color code for the category",
            "example": "#FF5733"
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user who owns this category"
          }
        },
        "required": [
          "name",
          "colorHex",
          "userId"
        ]
      },
      "Log": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "description": "The unique identifier for the log"
          },
          "userId": {
            "type": "string",
            "description": "The ID of the user who performed the action"
          },
          "action": {
            "type": "string",
            "description": "The type of action performed",
            "enum": [
              "CREATE",
              "UPDATE",
              "DELETE"
            ]
          },
          "targetType": {
            "type": "string",
            "description": "The type of entity the action was performed on"
          },
          "targetId": {
            "type": "string",
            "description": "The ID of the target entity"
          },
          "timestamp": {
            "type": "string",
            "format": "date-time",
            "description": "The timestamp when the action occurred"
          }
        },
        "required": [
          "userId",
          "action",
          "targetType",
          "targetId"
        ]
      }
    }
  },
  "category": [
    {
      "name": "User",
      "description": "Operations related to users"
    },
    {
      "name": "Tasks",
      "description": "Operations related to tasks"
    },
    {
      "name": "Category",
      "description": "Operations related to category"
    },
    {
      "name": "Logs",
      "description": "Operations related to logs"
    }
  ]
}