{
  "openapi": "3.0.0",
  "info": {
    "title": "OrganizeMe API",
    "version": "1.0.0",
    "description": "API documentation for the OrganizeMe project"
  },
  "servers": [
    {
      "url": "https://organizeme-xtcl.onrender.com/"
    },
    {
      "url": "http://localhost:3000/"
    }
  ],
  "tags": [
    {
      "name": "User",
      "description": "Operations related to users"
    },
    {
      "name": "Task",
      "description": "Operations related to tasks"
    },
    {
      "name": "Category",
      "description": "Operations related to category"
    },
    {
      "name": "Tag",
      "description": "Operations related to tags"
    }
  ],
  "paths": {
    "/user": {
      "post": {

        "summary": "Create a new User",
        "tags": [ "User"],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "passwordHash": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                },
                "required": [
                  "email",
                  "passwordHash",
                  "firstName",
                  "lastName"
                ]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User created"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "get": {
        "summary": "Get all users",
        "tags": [ "User" ],
        "responses": {
          "200": {
            "description": "List of users",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "summary": "Get a user by ID",
        "tags": [ "User" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "A single user",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "User not found"
          }
        }
      },
      "put": {
        "summary": "Update a user by ID",
        "tags": [ "User" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "email": {
                    "type": "string"
                  },
                  "passwordHash": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User updated"
          },
          "404": {
            "description": "User not found"
          },
          "400": {
            "description": "Bad request"
          }
        }
      },
      "delete": {
        "summary": "Delete a user by ID",
        "tags": [ "User" ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "User ID",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "User deleted"
          },
          "404": {
            "description": "User not found"
          }
        }
      }
    },
    "/task": {
      "post": {
        "tags": ["Task"],
        "summary": "Create a new task",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Complete project"
                  },
                  "description": {
                    "type": "string",
                    "example": "Finish the API integration"
                  },
                  "dueDate": {
                    "type": "string",
                    "format": "date",
                    "example": "2024-12-25"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "in-progress", "completed"],
                    "example": "pending"
                  },
                  "priority": {
                    "type": "string",
                    "enum": ["low", "medium", "high"],
                    "example": "high"
                  },
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["work", "urgent"]
                  },
                  "categoryId": {
                    "type": "string",
                    "example": "675c9d1b2f3ab22d87c83ec5"
                  }
                },
                "required": ["title", "description"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Task created successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "400": {
            "description": "Bad request - Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Task"],
        "summary": "Get all tasks",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of tasks retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/task/{id}": {
      "get": {
        "tags": ["Task"],
        "summary": "Get a task by ID",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "6758b61d239d9db7d0cca66d"
          }
        ],
        "responses": {
          "200": {
            "description": "Task retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "put": {
        "tags": ["Task"],
        "summary": "Update a task",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "6758b61d239d9db7d0cca66d"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": {
                    "type": "string",
                    "example": "Updated Title"
                  },
                  "description": {
                    "type": "string",
                    "example": "Updated description"
                  },
                  "status": {
                    "type": "string",
                    "enum": ["pending", "in-progress", "completed"],
                    "example": "in-progress"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Task updated successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Task not found"
          }
        }
      },
      "delete": {
        "tags": ["Task"],
        "summary": "Delete a task",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "6758b61d239d9db7d0cca66d"
          }
        ],
        "responses": {
          "200": {
            "description": "Task deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Task not found"
          }
        }
      }
    },
    "/category": {
      "post": {
        "tags": ["Category"],
        "summary": "Create a new category",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Work"
                  },
                  "colorHex": {
                    "type": "string",
                    "pattern": "^#[0-9A-Fa-f]{6}$",
                    "example": "#FF5733"
                  }
                },
                "required": ["name", "colorHex"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Category created successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "_id": {
                      "type": "string"
                    },
                    "name": {
                      "type": "string"
                    },
                    "colorHex": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "400": {
            "description": "Bad request - Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Category"],
        "summary": "Get all categories",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "responses": {
          "200": {
            "description": "List of categories retrieved successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "_id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string"
                      },
                      "colorHex": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/category/{id}": {
      "put": {
        "tags": ["Category"],
        "summary": "Update a category",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "example": "Work"
                  },
                  "colorHex": {
                    "type": "string",
                    "pattern": "^#[0-9A-Fa-f]{6}$",
                    "example": "#FF5733"
                  }
                },
                "required": ["name", "colorHex"]
              }
            }
          }
        }
      },
      
      "delete": {
        "tags": ["Category"],
        "summary": "Delete a category",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "67591a5615263aeebe40b38b"
          }
        ],
        "responses": {
          "200": {
            "description": "Category deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Category not found"
          }
        }
      }
  },
    "/tag": {
      "post": {
        "tags": ["Tag"],
        "summary": "Create a new tag",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "array",
                    "items": {
                      "type": "string"
                    },
                    "example": ["work", "urgent"]
                  }
                },
                "required": ["tags"]
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Tag created successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "400": {
            "description": "Bad request - Invalid input"
          }
        }
      },
      "get": {
        "tags": ["Tag"],
        "summary": "Get all tags",
        "responses": {
          "200": {
            "description": "List of tags retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          }
        }
      }
    },
    "/tag/{id}": {
      "get": {
        "tags": ["Tag"],
        "summary": "Get a tag by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "6758b61d239d9db7d0cca66d"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag retrieved successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Tag not found"
          }
        }
      },
      "put": {
        "tags": ["Tag"],
        "summary": "Update a tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "6758b61d239d9db7d0cca66d"
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "tags": {
                    "type": "string",
                    "example": ["tag1", "tag2", "tag3"],
                    "description": "Array of strings representing the updated tags"
                  }
                },
                "required": ["tags"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Tag updated successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Tag not found"
          }
        }
      },
      "delete": {
        "tags": ["Tag"],
        "summary": "Delete a tag",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "example": "6758b61d239d9db7d0cca66d"
          }
        ],
        "responses": {
          "200": {
            "description": "Tag deleted successfully"
          },
          "401": {
            "description": "Unauthorized - Invalid or missing token"
          },
          "404": {
            "description": "Tag not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "email": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Email of the user"
                  }
                }
              },
              "passwordHash": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The password of the user"
                  }
                }
              },
              "firstName": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "User's first name"
                  }
                }
              },
              "lastName": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "User's last name"
                  }
                }
              },
              "createdAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "Date of User creation"
                  }
                }
              },
              "updateAt": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date-time"
                  },
                  "description": {
                    "type": "string",
                    "example": "Timestamp when the user was last updated"
                  }
                }
              }
            }
          },
          "required": {
            "type": "array",
            "example": [
              "email",
              "passwordHash",
              "firstName",
              "lastName"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Task": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "title": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The title of the task"
                  }
                }
              },
              "description": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Details about the task"
                  }
                }
              },
              "dueDate": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "format": {
                    "type": "string",
                    "example": "date"
                  },
                  "description": {
                    "type": "string",
                    "example": "The due date of the task"
                  }
                }
              },
              "status": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The current status of the task"
                  },
                  "enum": {
                    "type": "array",
                    "example": [
                      "pending",
                      "in-progress",
                      "completed"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "default": {
                    "type": "string",
                    "example": "pending"
                  }
                }
              },
              "priority": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The priority level of the task"
                  },
                  "enum": {
                    "type": "array",
                    "example": [
                      "low",
                      "medium",
                      "high"
                    ],
                    "items": {
                      "type": "string"
                    }
                  },
                  "default": {
                    "type": "string",
                    "example": "medium"
                  }
                }
              },
              "userId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The identifier of the user who owns the task."
                  }
                }
              },
              "tags": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "array"
                  },
                  "items": {
                    "type": "object",
                    "properties": {
                      "type": {
                        "type": "string",
                        "example": "string"
                      },
                      "description": {
                        "type": "string",
                        "example": "Unique identifier for the category associated with the taks"
                      }
                    }
                  }
                }
              },
              "categoryId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "Identifier for category this task belongs to"
                  }
                }
              }
            }
          },
          "required": {
            "type": "array",
            "example": [
              "title",
              "description",
              "dueDate",
              "priority"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Category": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "example": "object"
          },
          "properties": {
            "type": "object",
            "properties": {
              "name": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The name of the category"
                  }
                }
              },
              "colorHex": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The hex color code for the category"
                  },
                  "example": {
                    "type": "string",
                    "example": "#FF5733"
                  }
                }
              },
              "userId": {
                "type": "object",
                "properties": {
                  "type": {
                    "type": "string",
                    "example": "string"
                  },
                  "description": {
                    "type": "string",
                    "example": "The ID of the user who owns this category"
                  }
                }
              }
            }
          },
          "required": {
            "type": "array",
            "example": [
              "name",
              "colorHex",
              "userId"
            ],
            "items": {
              "type": "string"
            }
          }
        }
      },
    "securitySchemes": {
      "bearerAuth": {
        "type": "apiKey",
        "in": "header",
        "name": "Authorization",
        "description": "Enter your API token with the `Bearer` prefix, e.g. \"Bearer abcdef123456\""
      }
    }
  },
  "security": [
    {
      "bearerAuth": []
    }
  ]
}
}